import torch
from torch.utils.data import Dataset, DataLoader


# 设计数据集
class MyDataset(torch.utils.data.Dataset):
    def __init__(self, data):
        self.data = data

    def __len__(self):
        return len(self.data)

    def __getitem__(self, index):
        return torch.tensor(self.data[index], dtype=torch.float32)


MainFunc = [

]


VulnFunc = [
    0xf3, 0x0f, 0x1e, 0xfa, 0x55, 0x48, 0x89, 0xe5, 0x48, 0x83, 0xec, 0x60, 0x48, 0x8d, 0x45, 0xa0,
    0xba, 0x90, 0x01, 0x00, 0x00, 0x48, 0x89, 0xc6, 0xbf, 0x00, 0x00, 0x00, 0x00, 0xe8, 0xe5, 0xfe,
    0xff, 0xff, 0x89, 0x45, 0xfc, 0x48, 0x8d, 0x55, 0xa0, 0x8b, 0x45, 0xfc, 0x89, 0xc6, 0x48, 0x8d,
    0x05, 0x46, 0x0e, 0x00, 0x00, 0x48, 0x89, 0xc7, 0xb8, 0x00, 0x00, 0x00, 0x00, 0xe8, 0xb5, 0xfe,
    0xff, 0xff, 0x48, 0x8d, 0x05, 0x4d, 0x0e, 0x00, 0x00, 0x48, 0x89, 0xc7, 0xe8, 0x96, 0xfe, 0xff,
    0xff, 0xb8, 0x00, 0x00, 0x00, 0x00, 0xc9, 0xc3
]

data = bytearray.fromhex(
    '48 31 ff 48 31 f6 48 31 d2 48 31 c0 50 48 bb 2f 62 69 6e 2f 2f 73 68 53 48 89 e7 b0 3b 0f 05')


# 创建一个数据加载器
loader = DataLoader(VulnFunc, batch_size=1024, shuffle=True)

# 训练模型
for tran_x in loader:
    print(tran_x)
